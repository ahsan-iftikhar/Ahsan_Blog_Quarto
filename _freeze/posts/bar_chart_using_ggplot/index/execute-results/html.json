{
  "hash": "925cb0abcdf2d279cb94165a15b2c88b",
  "result": {
    "markdown": "---\ntitle: \"Making bar chart using ggplot\"\ndate: \"2022-09-13\"\n---\n\n\n# What is a bar chart?\n\nA chart featuring the interaction of a categorical variable and it's numercial value. More simply, the numercial values are represented by bars, whose length vary based on the value\n\n> Bar chart is more preferrable than pie charts and mostly better choice to compare values.\n\n# When to use it?\n\n* When drawing comparison between different categorical variables.\n* When the discrete variables being represented are more than 4. \n\n# When not to use it?\n\n* When the discrete variables being represented are greater than 5\n* When comparison of a discrete variable, having another another discrete variable is required\n\n# Hueristic of making a bar chart in R\n\n* In the ggplot, aesthetic function call, \n     + x should be categorical variable. Use as.factor, in-case the variable is a numeric variable \n     + y should be the numerical variable from the dataset. \n     + Fill argument should be the categorical variable from dataset.\n* Call geom_bar() function, wherein stat = \"identity\" \n  + Alterntively, geom_col() can also be used\n* Finally, set labels using the labs() functions call \n\n# Examples of making bar chart using ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\n```\n:::\n\n\nCreating a sample data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf = tibble(\n  brand = c(\"Samsung\",\"Huawei\",\"Apple\",\"Xiaomi\",\"OPPO\",\"Other\"),\n  share = c(2090,1580, 1210, 930, 860, 3320)\n  )\n\n\ndf <- df %>% \n  dplyr::mutate(brand = forcats::fct_reorder(brand, share))\n```\n:::\n\n\n## Bar chart\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(data = df, mapping = aes(x = brand, y = share)) +\n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Move this to Abraj R File -----------------------------------------------\nsummary_obs <- tibble(\n  rating = c(\"High\", \"Medium\", \"Low\"),\n  obs = c(0, 2, 7),\n  color = c(\"red\", \"yellow\", \"green\"),\n  ann = c(\"No high rated exception\", \" \", \" \")\n  )\n\n# summary_obs <- summary_obs %>%\n#   mutate(\n#     rating = factor(summary_obs$rating, levels = c(\"High\", \"Medium\", \"Low\"))\n#   )\n\nsummary_obs <- summary_obs %>%\n  mutate(\n    rating = as_factor(rating)\n  )\n\nggplot2::ggplot(data = summary_obs, aes(x = rating, y = obs)) +\n  geom_bar(stat = \"identity\", aes(fill = rating)) +\n  geom_text(aes(label = obs)) +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"red\", \"yellow\", \"green\")) +\n  labs(title = \"Finance & Accounts Review\",\n       subtitle = \"Summary of observations by rating\",\n       x = \"Risk Rating\",\n       y = \"No. of Observations\"\n       ) +\n  theme(\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}